Traceback (most recent call last):
  File "C:\Users\ashej\myGitHubRepos\jupyter-books\.venv\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "C:\Users\ashej\myGitHubRepos\jupyter-books\.venv\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\ashej\myGitHubRepos\jupyter-books\.venv\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\ashej\AppData\Local\Programs\Python\Python314\Lib\asyncio\base_events.py", line 719, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\ashej\myGitHubRepos\jupyter-books\.venv\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "C:\Users\ashej\myGitHubRepos\jupyter-books\.venv\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\ashej\myGitHubRepos\jupyter-books\.venv\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import ipywidgets as widgets

#The text boxes where the user can input values.
sl_widget = widgets.FloatText(description='sepal L:', value='0')
sw_widget = widgets.FloatText(description='sepal W:', value='0')
pl_widget = widgets.FloatText(description='petal L:', value='0')
pw_widget = widgets.FloatText(description='petal W:', value='0')

#A button for the user to get predictions using input valus. 
button_predict = widgets.Button( description='Predict' )
button_output = widgets.Label(value='Enter values and press the \"Predict\" button.' )

#Defines what happens when you click the button 
def on_click_predict(b):
    predicition = svm_model.predict([[
        sl_widget.value, sw_widget.value, pl_widget.value, pw_widget.value]])
    button_output.value='Prediction = '+ str(predicition[0])
button_predict.on_click(on_click_predict)

#Displays the text boxes and buttons inside a VBox 
vb=widgets.VBox([sl_widget, sw_widget, pl_widget, pw_widget, button_predict, button_output])
print('\033[1m' + 'Enter values in cm and make a prediction' + '\033[0m')
display(vb)

# According to the widget docs, 
# https://ipywidgets.readthedocs.io/en/7.6.3/examples/Widget%20Styling.html
# you cannot adjust the description length. For adjusting widget display behavior, 
# you can use a labeled HBox contained in the VBox.
------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[4][39m[32m, line 1[39m
[32m----> [39m[32m1[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mipywidgets[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mwidgets[39;00m
[32m      3[39m [38;5;66;03m#The text boxes where the user can input values.[39;00m
[32m      4[39m sl_widget = widgets.FloatText(description=[33m'[39m[33msepal L:[39m[33m'[39m, value=[33m'[39m[33m0[39m[33m'[39m)

[31mModuleNotFoundError[39m: No module named 'ipywidgets'

